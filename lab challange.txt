Stepno1

gcloud config set compute/zone us-east1-b

gcloud container clusters create nucleus-webserver1
 
Stepn02
gcloud container clusters get-credentials nucleus-webserver1

Kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:2.0
Go through kubernetes Engine then clusters

Kubectl expose deployment hello-app --type=LoadBalancer --port 8080  
 
Kubectl get service
Kubect1 get service

Kubect1 get service
  
Kubect1 get service

TASK03
Copy from task  

gcloud compute instance-templates create nginx-template \
> --metadata-from-file startup-script=startup.sh

gcloud compute target-pools create nginx-pool

Enter n 
Select 18
  
gcloud compute instance-groups managed create nginx-group \
 --base-instance-name nginx \
 --size 2 \
 --template nginx-template \
 --target-pool nginx-pool
gcloud compute instances list 

gcloud compute firewall-rules create wwwfirewall --allow tcp:80

gcloud compute forwarding-rules create nginx-1b \
--region us-east1 \ 
--ports=80 \
 --target-pool nginx-pool

gcloud compute forwarding-rules list

gcloud compute http-health-checks create http-basic-check    > //go through health check option//

gcloud compute instance-groups managed \
--set-named-ports nginx-group \
 --named-ports http:80

gcloud compute backend-services create nginx-backend \
 --protocol HTTP --http-health-checks http-basic-check --global

gcloud compute backend-services add-backend nginx-backend \
 --instance-group nginx-group \ 
 --instance-group-zone us-east1-b \
 --global                        

 //check instances //




gcloud compute url-maps create  web-map \
 --default-service nginx-backend

gcloud compute target-http-proxies create http-lb-proxy \
 --url-map web-map

gcloud computing forwarding-rules create http-content-rule \
 --global \
 --target-http-proxy http-lb-proxy \
 --ports 80

gcloud compute forwarding-rules

 create http-content-rule \     
 

       LAB MATERIAL






gcloud compute instances create nucleus-jumphost \
          --network nucleus-vpc \
          --zone us-east1-b  \
          --machine-type f1-micro  \
          --image-family debian-9  \
          --image-project debian-cloud \
          --scopes cloud-platform \
          --no-address

//Creating the backend Kubernetes cluster

gcloud container clusters create nucleus-backend \
          --num-nodes 1 \
          --network nucleus-vpc \
          --region us-east1

gcloud container clusters get-credentials nucleus-backend \
          --region us-east1

--region us-east1
            

kubectl expose deployment hello-server \
          --type=LoadBalancer \
          --port 8080



//Creating the web server frontend

cat << EOF > 
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF

gcloud compute instance-templates create web-server-template \
          --metadata-from-file  \
          --network nucleus-vpc \
          --machine-type g1-small \
          --region us-east1

gcloud compute instance-groups managed create web-server-group \
          --base-instance-name web-server \
          --size 2 \
          --template web-server-template \
          --region us-east1

gcloud compute firewall-rules create web-server-firewall \
          --allow tcp:80 \
          --network nucleus-vpc

gcloud compute http-health-checks create http-basic-check              //check health

gcloud compute instance-groups managed \
          set-named-ports web-server-group \
          --named-ports http:80 \
          --region us-east1

gcloud compute backend-services create web-server-backend \
          --protocol HTTP \
          --http-health-checks http-basic-check \
          --global

gcloud compute backend-services add-backend web-server-backend \                 //check insatance 
          --instance-group web-server-group \
          --instance-group-region us-east1 \
          --global

gcloud compute url-maps create web-server-map \
          --default-service web-server-backend         

gcloud compute target-http-proxies create http-lb-proxy \
          --url-map web-server-map

gcloud compute forwarding-rules create http-content-rule \
        --global \
        --target-http-proxy http-lb-proxy \                //check instance
        --ports 80

gcloud compute forwarding-rules list


Hope this helps!
Type a message here...
Type a message here...
